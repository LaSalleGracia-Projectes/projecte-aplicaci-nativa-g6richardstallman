kotlin version: 2.0.0
error message: Incremental compilation failed: null
java.io.EOFException
	at java.base/java.io.DataInputStream.readFully(Unknown Source)
	at java.base/java.io.DataInputStream.readFully(Unknown Source)
	at org.jetbrains.kotlin.com.intellij.util.io.IOUtil.readString(IOUtil.java:41)
	at org.jetbrains.kotlin.incremental.storage.StringExternalizer.read(externalizers.kt:225)
	at org.jetbrains.kotlin.incremental.storage.StringExternalizer.read(externalizers.kt:223)
	at org.jetbrains.kotlin.incremental.storage.CollectionExternalizerV2.read(externalizers.kt:352)
	at org.jetbrains.kotlin.incremental.storage.CollectionExternalizerV2.read(externalizers.kt:336)
	at org.jetbrains.kotlin.incremental.storage.NullableValueExternalizer.read(externalizers.kt:269)
	at org.jetbrains.kotlin.incremental.classpathDiff.RegularKotlinClassSnapshotExternalizer.read(ClasspathSnapshotSerializer.kt:112)
	at org.jetbrains.kotlin.incremental.classpathDiff.RegularKotlinClassSnapshotExternalizer.read(ClasspathSnapshotSerializer.kt:93)
	at org.jetbrains.kotlin.incremental.storage.DelegateDataExternalizer.read(externalizers.kt:250)
	at org.jetbrains.kotlin.incremental.classpathDiff.KotlinClassSnapshotExternalizer.read(ClasspathSnapshotSerializer.kt)
	at org.jetbrains.kotlin.incremental.classpathDiff.KotlinClassSnapshotExternalizer.read(ClasspathSnapshotSerializer.kt:80)
	at org.jetbrains.kotlin.incremental.storage.DelegateDataExternalizer.read(externalizers.kt:250)
	at org.jetbrains.kotlin.incremental.classpathDiff.AccessibleClassSnapshotExternalizer.read(ClasspathSnapshotSerializer.kt)
	at org.jetbrains.kotlin.incremental.classpathDiff.AccessibleClassSnapshotExternalizer.read(ClasspathSnapshotSerializer.kt:75)
	at org.jetbrains.kotlin.incremental.storage.CollectionExternalizerV2.read(externalizers.kt:352)
	at org.jetbrains.kotlin.incremental.storage.CollectionExternalizerV2.read(externalizers.kt:336)
	at org.jetbrains.kotlin.incremental.storage.ExternalizersKt.loadFromFile(externalizers.kt:185)
	at org.jetbrains.kotlin.incremental.classpathDiff.ClasspathChangesComputer.computeClasspathChanges(ClasspathChangesComputer.kt:65)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.calculateSourcesToCompileImpl(IncrementalJvmCompilerRunner.kt:194)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.calculateSourcesToCompile(IncrementalJvmCompilerRunner.kt:132)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.calculateSourcesToCompile(IncrementalJvmCompilerRunner.kt:62)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.tryCompileIncrementally$lambda$9$compile(IncrementalCompilerRunner.kt:225)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.tryCompileIncrementally(IncrementalCompilerRunner.kt:267)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:120)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:676)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:92)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1661)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)


